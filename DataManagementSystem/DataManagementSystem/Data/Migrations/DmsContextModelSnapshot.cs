// <auto-generated />
using System;
using DataManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataManagementSystem.Migrations
{
    [DbContext(typeof(DmsContext))]
    partial class DmsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataManagementSystem.Data.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BeneficiaryId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("BeneficiaryId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Beneficiary", b =>
                {
                    b.Property<int>("BeneficiaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlternativePhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmigrationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<string>("Race")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BeneficiaryId");

                    b.HasIndex("ProgrammeId");

                    b.ToTable("Beneficiaries");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("String")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("OfficeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Incubator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FacultyId")
                        .HasColumnType("int");

                    b.Property<int?>("IncubatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("IncubatorId");

                    b.ToTable("Incubators");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Programme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Funder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncubatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfApplication")
                        .HasColumnType("int");

                    b.Property<string>("PartnershipAgreement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IncubatorId");

                    b.ToTable("Programmes");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgrammeId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("ProgrammeId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Representative", b =>
                {
                    b.Property<int>("RepresentativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncubatorId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepresentativeId");

                    b.HasIndex("IncubatorId");

                    b.ToTable("Representatives");
                });

            modelBuilder.Entity("DataManagementSystem.Data.StartUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlternativePhoneNo")
                        .HasColumnType("int");

                    b.Property<int>("CellPhoneNo")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("startUpId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("startUpId");

                    b.ToTable("StartUps");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Address", b =>
                {
                    b.HasOne("DataManagementSystem.Data.Beneficiary", "Beneficiary")
                        .WithMany("Addresses")
                        .HasForeignKey("BeneficiaryId");

                    b.HasOne("DataManagementSystem.Data.Company", "Company")
                        .WithMany("Addresses")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Beneficiary", b =>
                {
                    b.HasOne("DataManagementSystem.Data.Programme", "Programme")
                        .WithMany("Beneficiaries")
                        .HasForeignKey("ProgrammeId");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Faculty", b =>
                {
                    b.HasOne("DataManagementSystem.Data.Company", "Company")
                        .WithMany("Faculties")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Incubator", b =>
                {
                    b.HasOne("DataManagementSystem.Data.Faculty", "Faculty")
                        .WithMany("Incubators")
                        .HasForeignKey("FacultyId");

                    b.HasOne("DataManagementSystem.Data.Incubator", null)
                        .WithMany("Incubators")
                        .HasForeignKey("IncubatorId");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Programme", b =>
                {
                    b.HasOne("DataManagementSystem.Data.Incubator", "Incubator")
                        .WithMany("Programmes")
                        .HasForeignKey("IncubatorId");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Report", b =>
                {
                    b.HasOne("DataManagementSystem.Data.Programme", "Programme")
                        .WithMany("Reports")
                        .HasForeignKey("ProgrammeId");
                });

            modelBuilder.Entity("DataManagementSystem.Data.Representative", b =>
                {
                    b.HasOne("DataManagementSystem.Data.Incubator", "Incubator")
                        .WithMany()
                        .HasForeignKey("IncubatorId");
                });

            modelBuilder.Entity("DataManagementSystem.Data.StartUp", b =>
                {
                    b.HasOne("DataManagementSystem.Data.Programme", "startUp")
                        .WithMany("StartUps")
                        .HasForeignKey("startUpId");
                });
#pragma warning restore 612, 618
        }
    }
}
